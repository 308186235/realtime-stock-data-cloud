<template>
  <view class="container">
    <view class="header">
      <text class="title">T+0自动交易系统</text>
      <text class="subtitle">当日买卖，把握盈利良机</text>
    </view>
    
    <view class="status-card" :class="isRunning ? 'status-running' : 'status-stopped'">
      <view class="status-header">
        <text class="status-title">系统状态</text>
        <text class="status-indicator">{{ isRunning ? '运行中' : '已停止' }}</text>
      </view>
      <view class="status-details">
        <view class="status-item">
          <text class="status-label">当前策略</text>
          <text class="status-value">{{ currentStrategy ? currentStrategy.name : '未选择' }}</text>
        </view>
        <view class="status-item">
          <text class="status-label">运行时间</text>
          <text class="status-value">{{ runningTime }}</text>
        </view>
        <view class="status-item">
          <text class="status-label">总交易次数</text>
          <text class="status-value">{{ transactionCount }}</text>
        </view>
        <view class="status-item">
          <text class="status-label">当日盈亏</text>
          <text class="status-value" :class="dailyProfit >= 0 ? 'profit' : 'loss'">
            {{ dailyProfit >= 0 ? '+' : '' }}¥{{ Math.abs(dailyProfit).toFixed(2) }}
          </text>
        </view>
      </view>
      <view class="control-buttons">
        <button class="control-btn" :class="isRunning ? 'btn-stop' : 'btn-start'" @click="toggleSystem">
          {{ isRunning ? '停止系统' : '启动系统' }}
        </button>
        <button class="control-btn btn-settings" @click="showSettings">
          系统设置
        </button>
      </view>
    </view>
    
    <!-- T+0策略说明 -->
    <view class="t0-info-card">
      <view class="info-header">
        <text class="info-title">T+0交易说明</text>
      </view>
      <view class="info-content">
        <text class="info-text">T+0交易是一种典型的超短线交易策略，核心是"当日买入、次日卖出"，持仓时间仅间隔一个交易日（即"隔夜"），旨在通过捕捉短期市场波动快速获利。主要操作包括：1) 尾盘15-30分钟选择有异动或符合热点题材的个股买入；2) 次日开盘或早盘借冲高机会卖出，获取隔夜差价；3) 严格执行止盈(3%以上)和止损(亏损控制在3%以内)纪律。本系统支持以下T+0策略：</text>
        <view class="info-list">
          <view class="info-item">
            <view class="bullet"></view>
            <text class="item-text">波段套利策略：盘中高抛低吸</text>
          </view>
          <view class="info-item">
            <view class="bullet"></view>
            <text class="item-text">量价突破策略：突破关键价位时入场</text>
          </view>
          <view class="info-item">
            <view class="bullet"></view>
            <text class="item-text">反转策略：捕捉盘中反转</text>
          </view>
          <view class="info-item">
            <view class="bullet"></view>
            <text class="item-text">分时均线策略：基于分时图均线交易</text>
          </view>
          <view class="info-item">
            <view class="bullet"></view>
            <text class="item-text">成交量分析：尾盘放量突破、尾盘资金流向分析</text>
          </view>
        </view>
      </view>
    </view>
    
    <view class="section-title">
      <text>T+0策略选择</text>
      <text class="add-strategy" @click="addNewStrategy">+ 新建策略</text>
    </view>
    
    <view class="strategy-list">
      <view v-for="(strategy, index) in strategies" 
        :key="index" 
        class="strategy-card" 
        :class="{'strategy-active': currentStrategyIndex === index}"
        @click="selectStrategy(index)">
        <view class="strategy-header">
          <text class="strategy-name">{{ strategy.name }}</text>
          <view class="strategy-actions">
            <text class="action-icon edit" @click.stop="editStrategy(index)">编辑</text>
            <text class="action-icon delete" @click.stop="deleteStrategy(index)">删除</text>
          </view>
        </view>
        
        <view class="strategy-detail">
          <view class="strategy-item">
            <text class="strategy-label">策略类型</text>
            <text class="strategy-value">{{ strategy.type }}</text>
          </view>
          <view class="strategy-item">
            <text class="strategy-label">目标股票</text>
            <text class="strategy-value">{{ strategy.targetStocks.join(', ') }}</text>
          </view>
          <view class="strategy-item">
            <text class="strategy-label">执行周期</text>
            <text class="strategy-value">{{ strategy.interval }}</text>
          </view>
          <view class="strategy-item">
            <text class="strategy-label">风险等级</text>
            <text class="strategy-value" :class="'risk-level-' + strategy.riskLevel">
              {{ getRiskLevelText(strategy.riskLevel) }}
            </text>
          </view>
        </view>
        
        <view class="strategy-performance">
          <view class="performance-item">
            <text class="performance-label">历史收益率</text>
            <text class="performance-value" :class="strategy.historicalReturn >= 0 ? 'profit' : 'loss'">
              {{ strategy.historicalReturn >= 0 ? '+' : '' }}{{ strategy.historicalReturn }}%
            </text>
          </view>
          <view class="performance-item">
            <text class="performance-label">最大回撤</text>
            <text class="performance-value loss">-{{ strategy.maxDrawdown }}%</text>
          </view>
          <view class="performance-item">
            <text class="performance-label">盈亏比</text>
            <text class="performance-value">{{ strategy.winLossRatio }}</text>
          </view>
          <view class="performance-item">
            <text class="performance-label">夏普比率</text>
            <text class="performance-value">{{ strategy.sharpeRatio }}</text>
          </view>
        </view>
      </view>
      
      <view v-if="strategies.length === 0" class="empty-strategies">
        <text class="empty-text">暂无交易策略，请点击"新建策略"添加</text>
      </view>
    </view>
    
    <view class="section-title">交易日志</view>
    
    <view class="log-container">
      <view v-for="(log, index) in tradingLogs" :key="index" class="log-item">
        <text class="log-time">{{ log.timestamp }}</text>
        <text class="log-message" :class="{'log-error': log.type === 'error'}">{{ log.message }}</text>
      </view>
      
      <view v-if="tradingLogs.length === 0" class="empty-logs">
        <text class="empty-text">暂无交易日志</text>
      </view>
    </view>
  </view>
</template>

<script>
export default {
  data() {
    return {
      isRunning: false,
      runningTime: '00:00:00',
      transactionCount: 0,
      dailyProfit: 0,
      currentStrategyIndex: -1,
      strategies: [
        {
          name: '均线突破策略',
          type: '趋势跟踪',
          targetStocks: ['贵州茅台', '宁德时代', '中国平安'],
          interval: '5分钟',
          riskLevel: 2,
          historicalReturn: 15.8,
          maxDrawdown: 8.2,
          winLossRatio: '1.5:1',
          sharpeRatio: '1.2'
        },
        {
          name: 'RSI超买超卖策略',
          type: '逆势交易',
          targetStocks: ['阿里巴巴', '腾讯控股'],
          interval: '日线',
          riskLevel: 3,
          historicalReturn: 22.3,
          maxDrawdown: 12.5,
          winLossRatio: '1.3:1',
          sharpeRatio: '0.9'
        },
        {
          name: '价值投资策略',
          type: '基本面分析',
          targetStocks: ['平安银行', '工商银行', '建设银行', '招商银行'],
          interval: '周线',
          riskLevel: 1,
          historicalReturn: 8.5,
          maxDrawdown: 5.1,
          winLossRatio: '2.1:1',
          sharpeRatio: '1.5'
        },
      ],
      tradingLogs: [
        {
          timestamp: '2023-05-10 09:30:15',
          message: '系统启动，加载均线突破策略',
          type: 'info'
        },
        {
          timestamp: '2023-05-10 09:35:22',
          message: '检测到宁德时代(300750)突破20日均线，生成买入信号',
          type: 'info'
        },
        {
          timestamp: '2023-05-10 09:35:25',
          message: '买入宁德时代(300750) 200股，价格：185.50元',
          type: 'info'
        },
        {
          timestamp: '2023-05-10 10:15:18',
          message: '检测到贵州茅台(600519)跌破60日均线，生成卖出信号',
          type: 'info'
        },
        {
          timestamp: '2023-05-10 10:15:20',
          message: '卖出贵州茅台(600519) 50股，价格：1789.50元',
          type: 'info'
        },
        {
          timestamp: '2023-05-10 11:05:33',
          message: '网络连接中断，尝试重新连接',
          type: 'error'
        },
        {
          timestamp: '2023-05-10 11:06:15',
          message: '网络连接恢复，系统继续运行',
          type: 'info'
        }
      ],
      timer: null
    };
  },
  computed: {
    currentStrategy() {
      return this.currentStrategyIndex >= 0 ? this.strategies[this.currentStrategyIndex] : null;
    }
  },
  methods: {
    toggleSystem() {
      if (this.currentStrategyIndex < 0 && !this.isRunning) {
        uni.showToast({
          icon: 'none',
          title: '请先选择交易策略'
        });
        return;
      }
      
      this.isRunning = !this.isRunning;
      
      if (this.isRunning) {
        this.startTimer();
        this.addLog(`系统启动，加载${this.currentStrategy.name}`);
      } else {
        this.stopTimer();
        this.addLog('系统停止运行');
      }
    },
    startTimer() {
      let seconds = 0;
      this.timer = setInterval(() => {
        seconds++;
        const hours = Math.floor(seconds / 3600);
        const minutes = Math.floor((seconds % 3600) / 60);
        const secs = seconds % 60;
        
        this.runningTime = `${this.padZero(hours)}:${this.padZero(minutes)}:${this.padZero(secs)}`;
        
        // 模拟交易活动
        if (seconds % 60 === 0) {
          this.simulateTrading();
        }
      }, 1000);
    },
    stopTimer() {
      if (this.timer) {
        clearInterval(this.timer);
        this.timer = null;
      }
    },
    padZero(num) {
      return num.toString().padStart(2, '0');
    },
    selectStrategy(index) {
      this.currentStrategyIndex = index;
    },
    addNewStrategy() {
      uni.navigateTo({
        url: '/pages/strategy-analysis/index'
      });
    },
    editStrategy(index) {
      uni.navigateTo({
        url: `/pages/strategy-analysis/index?edit=${index}`
      });
    },
    deleteStrategy(index) {
      uni.showModal({
        title: '删除策略',
        content: `确定要删除策略"${this.strategies[index].name}"吗？`,
        success: (res) => {
          if (res.confirm) {
            this.strategies.splice(index, 1);
            if (this.currentStrategyIndex === index) {
              this.currentStrategyIndex = -1;
            } else if (this.currentStrategyIndex > index) {
              this.currentStrategyIndex--;
            }
          }
        }
      });
    },
    showSettings() {
      uni.navigateTo({
        url: '/pages/trade-settings/index'
      });
    },
    getRiskLevelText(level) {
      const levels = ['极低', '低', '中', '高', '极高'];
      return levels[level - 1] || '未知';
    },
    addLog(message, type = 'info') {
      const now = new Date();
      const timestamp = `${now.getFullYear()}-${this.padZero(now.getMonth() + 1)}-${this.padZero(now.getDate())} ${this.padZero(now.getHours())}:${this.padZero(now.getMinutes())}:${this.padZero(now.getSeconds())}`;
      
      this.tradingLogs.unshift({
        timestamp,
        message,
        type
      });
      
      // 保持日志不超过100条
      if (this.tradingLogs.length > 100) {
        this.tradingLogs.pop();
      }
    },
    simulateTrading() {
      if (!this.isRunning || !this.currentStrategy) return;
      
      const random = Math.random();
      const stock = this.currentStrategy.targetStocks[Math.floor(Math.random() * this.currentStrategy.targetStocks.length)];
      const stockCode = '600000'; // 模拟股票代码
      
      if (random > 0.7) {
        // 模拟买入
        const price = (Math.random() * 50 + 10).toFixed(2);
        const quantity = Math.floor(Math.random() * 500) + 100;
        this.addLog(`买入${stock}(${stockCode}) ${quantity}股，价格：${price}元`);
        this.transactionCount++;
        this.dailyProfit += Math.random() * 1000 - 500;
      } else if (random > 0.4) {
        // 模拟卖出
        const price = (Math.random() * 50 + 10).toFixed(2);
        const quantity = Math.floor(Math.random() * 500) + 100;
        this.addLog(`卖出${stock}(${stockCode}) ${quantity}股，价格：${price}元`);
        this.transactionCount++;
        this.dailyProfit += Math.random() * 1000 - 500;
      } else if (random > 0.38) {
        // 偶尔模拟错误
        this.addLog('API请求超时，等待重试', 'error');
      }
    }
  },
  onUnload() {
    this.stopTimer();
  }
};
</script>

<style>
.container {
  padding: 30rpx;
  background-color: #141414;
  min-height: 100vh;
}

.header {
  margin-bottom: 30rpx;
}

.title {
  font-size: 40rpx;
  font-weight: bold;
  color: #ffffff;
  margin-bottom: 10rpx;
}

.subtitle {
  font-size: 26rpx;
  color: #999999;
  margin-bottom: 20rpx;
}

.status-card {
  background-color: #222222;
  border-radius: 15rpx;
  overflow: hidden;
  margin-bottom: 30rpx;
}

.status-running {
  border: 2rpx solid #4CAF50;
}

.status-stopped {
  border: 2rpx solid #FF5252;
}

.status-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 20rpx;
  background-color: #333333;
}

.status-title {
  font-size: 32rpx;
  font-weight: bold;
  color: #ffffff;
}

.status-indicator {
  font-size: 28rpx;
  font-weight: bold;
}

.status-running .status-indicator {
  color: #4CAF50;
}

.status-stopped .status-indicator {
  color: #FF5252;
}

.status-details {
  padding: 20rpx;
  display: flex;
  flex-wrap: wrap;
}

.status-item {
  width: 50%;
  margin-bottom: 15rpx;
}

.status-label {
  font-size: 26rpx;
  color: #999999;
  margin-bottom: 5rpx;
  display: block;
}

.status-value {
  font-size: 30rpx;
  color: #ffffff;
  font-weight: bold;
}

.control-buttons {
  display: flex;
  padding: 0 20rpx 20rpx;
}

.control-btn {
  flex: 1;
  margin: 0 10rpx;
  height: 80rpx;
  line-height: 80rpx;
  text-align: center;
  border-radius: 10rpx;
  font-size: 28rpx;
  font-weight: bold;
}

.btn-start {
  background-color: #4CAF50;
  color: white;
}

.btn-stop {
  background-color: #FF5252;
  color: white;
}

.btn-settings {
  background-color: #4c8dff;
  color: white;
}

/* T+0策略说明卡片 */
.t0-info-card {
  background-color: #222222;
  border-radius: 15rpx;
  overflow: hidden;
  margin-bottom: 30rpx;
  border: 2rpx solid #4c8dff;
}

.info-header {
  padding: 20rpx;
  background-color: #333333;
}

.info-title {
  font-size: 32rpx;
  font-weight: bold;
  color: #ffffff;
}

.info-content {
  padding: 20rpx;
}

.info-text {
  font-size: 26rpx;
  color: #cccccc;
  line-height: 1.5;
  margin-bottom: 15rpx;
}

.info-list {
  margin-top: 15rpx;
}

.info-item {
  display: flex;
  align-items: flex-start;
  margin-bottom: 10rpx;
}

.bullet {
  width: 12rpx;
  height: 12rpx;
  border-radius: 50%;
  background-color: #4c8dff;
  margin-top: 12rpx;
  margin-right: 15rpx;
}

.item-text {
  font-size: 26rpx;
  color: #cccccc;
  flex: 1;
}

.section-title {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 20rpx;
  font-size: 32rpx;
  font-weight: bold;
  color: #ffffff;
}

.add-strategy {
  font-size: 28rpx;
  color: #4c8dff;
}

.strategy-list {
  margin-bottom: 30rpx;
}

.strategy-card {
  background-color: #222222;
  border-radius: 15rpx;
  overflow: hidden;
  margin-bottom: 20rpx;
  border: 2rpx solid transparent;
}

.strategy-active {
  border-color: #4c8dff;
}

.strategy-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 20rpx;
  background-color: #333333;
}

.strategy-name {
  font-size: 30rpx;
  font-weight: bold;
  color: #ffffff;
}

.strategy-actions {
  display: flex;
}

.action-icon {
  font-size: 24rpx;
  padding: 5rpx 15rpx;
  border-radius: 5rpx;
  margin-left: 10rpx;
}

.edit {
  color: #4c8dff;
  background-color: rgba(76, 141, 255, 0.1);
}

.delete {
  color: #FF5252;
  background-color: rgba(255, 82, 82, 0.1);
}

.strategy-detail {
  padding: 20rpx;
  border-bottom: 1rpx solid #333333;
}

.strategy-item {
  display: flex;
  justify-content: space-between;
  margin-bottom: 10rpx;
}

.strategy-label {
  font-size: 26rpx;
  color: #999999;
}

.strategy-value {
  font-size: 26rpx;
  color: #ffffff;
}

.risk-level-1 {
  color: #4CAF50;
}

.risk-level-2 {
  color: #FFC107;
}

.risk-level-3 {
  color: #FF5252;
}

.strategy-performance {
  padding: 20rpx;
  display: flex;
  flex-wrap: wrap;
}

.performance-item {
  width: 50%;
  margin-bottom: 15rpx;
}

.performance-label {
  font-size: 24rpx;
  color: #999999;
  margin-bottom: 5rpx;
  display: block;
}

.performance-value {
  font-size: 28rpx;
  color: #ffffff;
  font-weight: bold;
}

.profit {
  color: #FF5252;
}

.loss {
  color: #4CAF50;
}

.empty-strategies {
  background-color: #222222;
  border-radius: 15rpx;
  padding: 60rpx 20rpx;
  text-align: center;
}

.empty-text {
  color: #999999;
  font-size: 28rpx;
}

.log-container {
  background-color: #222222;
  border-radius: 15rpx;
  padding: 20rpx;
  max-height: 500rpx;
  overflow-y: auto;
}

.log-item {
  padding: 15rpx 0;
  border-bottom: 1rpx solid #333333;
}

.log-item:last-child {
  border-bottom: none;
}

.log-time {
  font-size: 24rpx;
  color: #999999;
  margin-bottom: 5rpx;
  display: block;
}

.log-message {
  font-size: 26rpx;
  color: #cccccc;
  word-break: break-all;
}

.log-error {
  color: #FF5252;
}

.empty-logs {
  padding: 40rpx 0;
  text-align: center;
}
</style> 